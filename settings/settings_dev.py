"""
Django settings for restapi project.
Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import os
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

directory=BASE_DIR+'/media/'
directory_import=BASE_DIR+'/media/importfile/'
directory_export=BASE_DIR+'/media/exportfile/'
directory1=BASE_DIR+'/media/'+'category/100x100/'
directory2=BASE_DIR+'/media/'+'category/200x200/'
directory3=BASE_DIR+'/media/'+'category/800x800/'
directory7=BASE_DIR+'/media/'+'companylogo/250x185/'
directory_prduct1=BASE_DIR+'/media/'+'product/100x100/'
directory_prduct2=BASE_DIR+'/media/'+'product/200x200/'
directory_prduct3=BASE_DIR+'/media/'+'product/800x800/'
directory_prduct5=BASE_DIR+'/media/'+'product/80x80/'
directory_prduct6=BASE_DIR+'/media/'+'product/400x400/'

if not os.path.exists(directory):
    os.makedirs(directory)
if not os.path.exists(directory1):
    os.makedirs(directory1)
if not os.path.exists(directory2):
    os.makedirs(directory2)
if not os.path.exists(directory3):
    os.makedirs(directory3)  
if not os.path.exists(directory7):
    os.makedirs(directory7)
if not os.path.exists(directory_prduct1):
    os.makedirs(directory_prduct1)
if not os.path.exists(directory_prduct2):
    os.makedirs(directory_prduct2)
if not os.path.exists(directory_prduct3):
    os.makedirs(directory_prduct3)
if not os.path.exists(directory_prduct5):
    os.makedirs(directory_prduct5)
if not os.path.exists(directory_prduct6):
    os.makedirs(directory_prduct6) 
if not os.path.exists(directory_import):
    os.makedirs(directory_import)
if not os.path.exists(directory_export):
    os.makedirs(directory_export)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+ov83^c^x5m+#@685(bo5m3edv2txc)(15)83#y26@ps)x49a*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','navsoft.co.in','127.0.0.1','192.168.0.221','192.168.0.130','192.168.0.205','web.navsoft.co.in','client.navsoft.co.in','192.168.0.96','54.86.98.240','192.168.0.206','192.168.0.125','182.71.170.222', '192.168.0.243','192.168.0.2', '192.168.0.228', '192.168.0.145', '192.168.0.31','192.168.0.55', '192.168.0.155', '203.212.24.252','192.168.0.12','192.168.0.66',
'192.168.0.113','192.168.0.187','192.168.0.50','navsoft.co.in:9200','182.71.172.170:9200']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'auditlog',
    'webservices',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_user_agents',
    'rest_framework_swagger',
    # 'rest_framework_docs',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'settings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'settings.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'lifco_grocery1',        
        'USER': 'postgres',
        'PASSWORD': 'navsoftpsql',
        'HOST': '192.168.0.65',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# if socket.gethostbyname(socket.gethostname()) == '127.0.0.1':
if socket.gethostbyname('127.0.0.1') == '127.0.0.1':
    SITE_URL   = 'http://localhost:3000'
else:
    SITE_URL   = 'http://navsoft.co.in/grocery'

AUTH_USER_MODEL = 'webservices.engageboostusers'

AUTHENTICATION_BACKENDS = ('django.db.backends.DualAuthentication')

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        # 'webservices.auth.TokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'webservices.pagination.CustomPagination',
    # 'PAGE_SIZE': 10,
    # 'COERCE_DECIMAL_TO_FLOAT': True
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.JSONParser',
    ],
}

SWAGGER_SETTINGS = {
    'SHOW_REQUEST_HEADERS': True,
    'USE_SESSION_AUTH': False,
    'JSON_EDITOR': True,
    'api_version': '0.1',
    'enabled_methods': ['GET','POST','PUT','PATCH','DELETE'],
}


PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher'
)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'admin@boostmysale.com'
#Must generate specific password for your app in [gmail settings][1]
EMAIL_HOST_PASSWORD = 'zxcvasdf!@'
EMAIL_PORT = 587
# EMAIL_PORT = 465
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
   'localhost:3000',
   'localhost:4200',
   '192.168.0.221:3000',
   'navsoft.co.in:3000',
   'navsoft.co.in:73',
   'navsoft.co.in:66',
   'navsoft.co.in:61',
   '192.168.0.145',
   '192.168.0.228',
   '192.168.0.31',
   '192.168.0.55',
   '192.168.0.155',
   '203.212.24.252',
   '192.168.0.12',
   '192.168.0.130',
   '192.168.0.205:8000',
   '192.168.0.205:4200',
   '192.168.0.66',
   '192.168.0.187',
   '192.168.0.50',
   '192.168.0.113',
   'navsoft.co.in:9200',
   '182.71.172.170:9200'
)
CORS_ALLOW_HEADERS = (
   'accept',
   'accept-encoding',
   'authorization',
   'content-type',
   'dnt',
   'origin',
   'user-agent',
   'x-csrftoken',
   'x-requested-with',
   'issuper',
   'wid',
   'warehouseid',
   'WAREHOUSE',
   'DEVICEID',
   'issub'
)

IMAGE_URL = 'http://boostmysale.s3.amazonaws.com/Lifco/lifco/product/200x200/'
STORE_NAME = "lifco"
AMAZON_IMAGE_URL = 'http://boostmysale.s3.amazonaws.com/Lifco/lifco/product'
AMAZON_S3_FOLDER = 'Lifco/lifco'
# ELASTIC_HOST = '50.16.162.98'
ELASTIC_HOST = 'navsoft.co.in'
# ELASTIC_HOST = '192.168.0.65'
ELASTIC_PORT = '9200'
ELASTIC_URL = 'http://'+ELASTIC_HOST+':'+ELASTIC_PORT+'/'
AMAZON_BASE_URL = 'http://boostmysale.s3.amazonaws.com/'
AMAZON_S3_BUCKET = "boostmysale"
AMAZON_S3_ACCESS_KEY = "AKIAI4SWZ5AI6HWTP5WQ"
AMAZON_S3_SECRET_KEY = "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"