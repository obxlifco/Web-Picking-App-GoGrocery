# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-18 06:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0008_engageboostaxisreturndetails_engageboostbrandmasters_engageboostcategorybanners_engageboostccavenuer'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostCmsMenus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('company_website_id', models.IntegerField(blank=True, null=True)),
                ('page_id', models.IntegerField(blank=True, null=True)),
                ('ulorder', models.IntegerField(blank=True, null=True)),
                ('liorder', models.IntegerField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.SmallIntegerField(blank=True, null=True)),
                ('isdeleted', models.SmallIntegerField(blank=True, null=True)),
                ('device', models.CharField(blank=True, max_length=10, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCategoryMasters')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_cms_menus',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCommissionSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('category_name1', models.CharField(blank=True, max_length=255, null=True)),
                ('category_name2', models.CharField(blank=True, max_length=255, null=True)),
                ('category_name3', models.CharField(blank=True, max_length=255, null=True)),
                ('category_name4', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('commission_rate', models.FloatField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_commission_settings',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCompanies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_id', models.BigIntegerField(blank=True, null=True)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('boost_url', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('company_logo', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('skype_id', models.TextField(blank=True, null=True)),
                ('reset_password', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('trial', 'trial'), ('paid', 'paid'), ('hold', 'hold')], default='trial', max_length=20)),
                ('is_verified', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='y', max_length=2)),
                ('verified_code', models.CharField(blank=True, max_length=30, null=True)),
                ('database_name', models.CharField(blank=True, max_length=255, null=True)),
                ('database_user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('database_password', models.CharField(blank=True, max_length=255, null=True)),
                ('is_take_tour', models.IntegerField(blank=True, null=True)),
                ('terms_condition_accepted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('terms_accepted_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_accepted_browser', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_accepted_device', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_accepted_date', models.DateField(blank=True, null=True)),
                ('is_permission_changed', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('inactive_reason', models.TextField(blank=True, null=True)),
                ('delete_reason', models.TextField(blank=True, null=True)),
                ('last_login', models.DateField(blank=True, null=True)),
                ('last_login_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('login_salt', models.CharField(blank=True, max_length=255, null=True)),
                ('no_of_shipment', models.IntegerField(blank=True, null=True)),
                ('no_of_product', models.IntegerField(blank=True, null=True)),
                ('db_host', models.CharField(blank=True, max_length=255, null=True)),
                ('is_seperated', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_active_for', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCountries')),
            ],
            options={
                'db_table': 'engageboost_companies',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCompaniesCrons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.IntegerField(blank=True, null=True)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('cron_type', models.CharField(choices=[('auto', 'auto'), ('fixed', 'fixed')], default='fixed', max_length=10)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_companies_crons',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCompanyAuthentication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engageboost_company_id', models.IntegerField(blank=True, null=True)),
                ('authkey', models.CharField(blank=True, max_length=255, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('for_option', models.CharField(choices=[('POS', 'POS'), ('other', 'other')], max_length=10)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_company_authentication',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCompanyWebsiteMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.IntegerField()),
                ('domain_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_company_website_map',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCompanyWebsites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engageboost_company_id', models.IntegerField()),
                ('plan_id', models.BigIntegerField()),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=255, null=True)),
                ('s3folder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('websitename', models.CharField(blank=True, max_length=255, null=True)),
                ('website_category_id', models.IntegerField()),
                ('engageboost_template_master_id', models.IntegerField()),
                ('engageboost_template_color_master_id', models.IntegerField()),
                ('website_logo', models.CharField(blank=True, max_length=255, null=True)),
                ('id_proof', models.CharField(blank=True, max_length=255, null=True)),
                ('address_proof', models.CharField(blank=True, max_length=255, null=True)),
                ('other_document', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('relation', models.CharField(blank=True, max_length=255, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=255, null=True)),
                ('monthly_maintenance', models.CharField(blank=True, max_length=255, null=True)),
                ('race', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_no', models.CharField(blank=True, max_length=255, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('is_dns_configured', models.IntegerField(blank=True, null=True)),
                ('signup_country', models.CharField(blank=True, max_length=255, null=True)),
                ('dns_configured_date', models.DateField(blank=True, null=True)),
                ('dns_status', models.CharField(choices=[('Ok', 'Ok'), ('Not Configured', 'Not Configured'), ('Failed', 'Failed')], default='Not Configured', max_length=20, null=True)),
                ('dns_folder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('live_or_sandbox', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='y', max_length=2, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCountries')),
            ],
            options={
                'db_table': 'engageboost_company_websites',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCossSellProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('cross_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_coss_sell_products',
            },
        ),
    ]
