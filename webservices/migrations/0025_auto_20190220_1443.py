# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-20 14:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0024_engageboostnewslettersubcribes_engageboostorderstatussettings_engageboostordersubscribe_engageboosto'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostPermisions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('field_name', models.CharField(blank=True, max_length=250, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('1', '1'), ('0', '0')], default='0', max_length=2)),
                ('isblocked', models.CharField(choices=[('1', '1'), ('0', '0')], default='0', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_permisions',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPicklistProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picklist_id', models.IntegerField(blank=True, null=True)),
                ('shipment_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('shell_no', models.CharField(blank=True, max_length=100, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'engageboost_picklist_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPicklists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picklist_no', models.CharField(blank=True, max_length=100, null=True)),
                ('trents_picklist_no', models.CharField(blank=True, max_length=256, null=True)),
                ('barcode_id', models.CharField(blank=True, max_length=100, null=True)),
                ('picked_by', models.IntegerField(blank=True, null=True)),
                ('shipment_id', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_picklists',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPlanDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_price', models.FloatField(blank=True, null=True)),
                ('plan_commision', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('expiried', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_plan_details',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order_id', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('product_tax_price', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_name', models.CharField(blank=True, max_length=256, null=True)),
                ('tax_per', models.FloatField(blank=True, null=True)),
                ('updated_quantity', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('lot_no', models.CharField(blank=True, max_length=100, null=True)),
                ('rack_no', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_purchase_order_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrderReceivedProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=0)),
                ('product_tax_price', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_name', models.CharField(blank=True, max_length=256, null=True)),
                ('tax_per', models.FloatField(blank=True, null=True)),
                ('lot_no', models.CharField(blank=True, max_length=255, null=True)),
                ('rec_no', models.CharField(blank=True, max_length=255, null=True)),
                ('good_cond', models.IntegerField(blank=True, null=True)),
                ('damage', models.IntegerField(blank=True, null=True)),
                ('expiry_issue', models.IntegerField(blank=True, null=True)),
                ('total_qty', models.IntegerField(blank=True, null=True)),
                ('shortage', models.IntegerField(blank=True, null=True)),
                ('invoice_qty', models.IntegerField(blank=True, null=True)),
                ('manufact_date', models.DateField(blank=True, null=True)),
                ('received_date', models.DateField(blank=True, null=True)),
                ('standard_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('exp_issue', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('mrp_issue', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('issues', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('good_received', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('ok_to_ship', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_purchase_order_received_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('purchase_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('supplier_id', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
                ('purchase_order_payment_id', models.IntegerField(blank=True, null=True)),
                ('payment_method_description', models.TextField(blank=True, null=True)),
                ('payment_due_date', models.DateField(blank=True, null=True)),
                ('payment_days_credit', models.IntegerField(blank=True, null=True)),
                ('purchase_order_shipping_id', models.IntegerField(blank=True, null=True)),
                ('shipping_method_description', models.TextField(blank=True, null=True)),
                ('shipping_cost', models.FloatField(blank=True, null=True)),
                ('purchase_order_tax', models.FloatField(blank=True, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('shipping_cost_base', models.FloatField(blank=True, null=True)),
                ('purchase_order_tax_base', models.FloatField(blank=True, null=True)),
                ('gross_amount_base', models.FloatField(blank=True, null=True)),
                ('net_amount_base', models.FloatField(blank=True, null=True)),
                ('paid_amount_base', models.FloatField(blank=True, null=True)),
                ('discount_amount_base', models.FloatField(blank=True, null=True)),
                ('shipping_cost_stats', models.CharField(choices=[('e', 'e'), ('i', 'i')], default='e', max_length=2)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('PO Sent', 'PO Sent'), ('Shipped', 'Shipped'), ('Cancel', 'Cancel'), ('Received Partial', 'Received Partial'), ('Grn Pending', 'Grn Pending'), ('Received Full', 'Received Full')], default='Draft', max_length=255)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('tracking_company', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_purchase_orders',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrdersPaymentMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_purchase_orders_payment_methods',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrdersReceived',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('purchase_order_master_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, default=0, null=True)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
                ('received_purchaseorder_id', models.CharField(blank=True, max_length=255, null=True)),
                ('received_date', models.CharField(blank=True, max_length=255, null=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('supplier_id', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.CharField(max_length=255)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('purchase_order_payment_id', models.IntegerField(blank=True, null=True)),
                ('payment_method_description', models.TextField(blank=True, null=True)),
                ('payment_due_date', models.DateField(blank=True, null=True)),
                ('purchase_order_shipping_id', models.IntegerField(blank=True, null=True)),
                ('shipping_method_description', models.TextField(blank=True, null=True)),
                ('shipping_cost', models.FloatField(blank=True, null=True)),
                ('purchase_order_tax', models.FloatField(blank=True, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('gross_amount_base', models.FloatField(blank=True, null=True)),
                ('net_amount_base', models.FloatField(blank=True, null=True)),
                ('shipping_cost_base', models.FloatField(blank=True, null=True)),
                ('purchase_order_tax_base', models.FloatField(blank=True, null=True)),
                ('discount_amount_base', models.FloatField(blank=True, null=True)),
                ('paid_amount_base', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('p', 'p'), ('s', 's'), ('v', 'v'), ('r', 'r')], default='p', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('action', models.CharField(choices=[('increase', 'increase'), ('decrease', 'decrease'), ('convert', 'convert'), ('move', 'move'), ('update', 'update'), ('imported', 'imported'), ('refund', 'refund'), ('none', 'none'), ('shortage', 'shortage'), ('damage', 'damage')], default='null', max_length=255)),
            ],
            options={
                'db_table': 'engageboost_purchase_orders_received',
            },
        ),
        migrations.CreateModel(
            name='EngageboostPurchaseOrdersShippingMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_purchase_orders_shipping_methods',
            },
        ),
        migrations.CreateModel(
            name='EngageboostReceipeCategoryMasters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('lft', models.IntegerField(blank=True, null=True)),
                ('rght', models.IntegerField(blank=True, null=True)),
                ('check_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('thumb_image', models.CharField(blank=True, max_length=255, null=True)),
                ('banner_image', models.CharField(blank=True, max_length=255, null=True)),
                ('page_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('category_url', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('remote_image_upload', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_receipe_category_masters',
            },
        ),
        migrations.CreateModel(
            name='EngageboostRecipeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_id', models.IntegerField(blank=True, null=True)),
                ('recipe_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_recipe_categories',
            },
        ),
        migrations.CreateModel(
            name='EngageboostRecipeIngradiants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_id', models.IntegerField(blank=True, null=True)),
                ('ingradiant_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_recipe_ingradiants',
            },
        ),
        migrations.CreateModel(
            name='EngageboostRecipeMasters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serve', models.CharField(blank=True, max_length=255, null=True)),
                ('preparation', models.CharField(blank=True, max_length=255, null=True)),
                ('cook', models.CharField(blank=True, max_length=255, null=True)),
                ('direction', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('video', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_recipe_masters',
            },
        ),
        migrations.CreateModel(
            name='EngageboostRecipeProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_recipe_products',
            },
        ),
        migrations.AddField(
            model_name='engageboostpurchaseorderreceivedproducts',
            name='purchase_order_received',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostPurchaseOrdersReceived'),
        ),
    ]
