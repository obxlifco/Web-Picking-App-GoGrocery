# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-20 09:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0021_engageboosttempordermaster'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostTaxclasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_taxclasses',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTaxRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('apply', models.CharField(choices=[('b', 'b'), ('s', 's')], default='b', max_length=2)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('tax_type', models.CharField(choices=[('VAT', 'VAT'), ('CST', 'CST'), ('Excise Duty', 'Excise Duty')], default='VAT', max_length=2)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCountries')),
            ],
            options={
                'db_table': 'engageboost_tax_rates',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTaxRatesConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fields', models.IntegerField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('condition_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field_type', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaxRatesConditions', to='webservices.EngageboostTaxRates')),
            ],
            options={
                'db_table': 'engageboost_tax_rates_conditions',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTaxRuleTables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('product_tax_class_id', models.CharField(max_length=255)),
                ('customer_tax_class_id', models.CharField(max_length=255)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('rule_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostTaxRates')),
            ],
            options={
                'db_table': 'engageboost_tax_rule_tables',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTaxSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.BigIntegerField(blank=True, null=True)),
                ('shipping_tax_class', models.IntegerField(blank=True, null=True)),
                ('tax_calculation_based_on', models.CharField(choices=[('Shipping Address', 'Shipping Address'), ('Billing Address', 'Billing Address')], default='Shipping Address', max_length=50)),
                ('catalog_prices', models.CharField(choices=[('Including Tax', 'Including Tax'), ('Excluding Tax', 'Excluding Tax')], default='Excluding Tax', max_length=50)),
                ('shipping_price', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax')], default='Excluding Tax', max_length=50)),
                ('apply_customer_tax', models.CharField(choices=[('Before Discount', 'Before Discount'), ('After Discount', 'After Discount')], default='Before Discount', max_length=50)),
                ('apply_discount_on_prices', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('display_product_prices_in_catalog', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('display_shipping_prices', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('display_prices', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('display_subtotal', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('display_shipping_amount', models.CharField(choices=[('Excluding Tax', 'Excluding Tax'), ('Including Tax', 'Including Tax'), ('Including and Excluding Tax', 'Including and Excluding Tax')], default='null', max_length=50)),
                ('include_tax_in_grand_total', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='null', max_length=50)),
                ('display_full_tax_summary', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='null', max_length=50)),
                ('display_zero_tax_subtotal', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='null', max_length=50)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_tax_settings',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempCategoryMasters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.TextField(blank=True, null=True)),
                ('lft', models.IntegerField(blank=True, null=True)),
                ('rght', models.IntegerField(blank=True, null=True)),
                ('check_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('thumb_image', models.CharField(blank=True, max_length=255, null=True)),
                ('page_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('category_url', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
                ('err_flag', models.TextField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('customer_group_id', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_temp_category_masters',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempChannelCategoryMappings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_category_id', models.IntegerField(blank=True, null=True)),
                ('channel_parent_category_id', models.IntegerField(blank=True, null=True)),
                ('boost_parent_category_id', models.IntegerField(blank=True, null=True)),
                ('boost_category_id', models.IntegerField(blank=True, null=True)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_temp_channel_category_mappings',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempCustomers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('perfix', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('owner_id', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('modifiedon', models.DateTimeField(blank=True, null=True)),
                ('view_time', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.CharField(choices=[('0', '0'), ('1', '1')], default='0', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_import', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('err_flag', models.IntegerField(blank=True, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCountries')),
                ('customer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomerGroup')),
            ],
            options={
                'db_table': 'engageboost_temp_customers',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempEmktContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_list_id', models.IntegerField(blank=True, null=True)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('list_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('email_format', models.CharField(choices=[('HTML', 'HTML'), ('TEXT', 'TEXT'), ('HTML&TEXT', 'HTML&TEXT')], default='HTML', max_length=2)),
                ('activity_status', models.CharField(choices=[('active', 'active'), ('subscribed', 'subscribed'), ('unsubscribed', 'unsubscribed')], default='active', max_length=2)),
                ('confirmation_status', models.CharField(choices=[('confirm', 'confirm'), ('unconfirm', 'unconfirm')], default='unconfirm', max_length=2)),
                ('date_of_birth', models.CharField(blank=True, max_length=50, null=True)),
                ('anniversary_date', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('confirm_date', models.DateField(blank=True, null=True)),
                ('confirm_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('edeal', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('interest', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('opt_in', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('e_deal', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('mail_flag', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('bounce_check_flag', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('unsub_date', models.DateField(blank=True, null=True)),
                ('email_campaign_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('err_flag', models.IntegerField(blank=True, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_temp_emkt_contacts',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTemporaryShoppingCarts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('original_price', models.FloatField(blank=True, null=True)),
                ('selling_price', models.FloatField(blank=True, null=True)),
                ('offer', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('variant_name', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('veg_nonveg_type', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg'), ('NA', 'NA')], default='NA', max_length=2)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_temporary_shopping_carts',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempProductCustomFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('field_name', models.CharField(blank=True, max_length=255, null=True)),
                ('field_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_temp_product_custom_fields',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempProductimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('0', '0'), ('1', '1')], default='0', max_length=2)),
                ('is_cover', models.IntegerField(blank=True, null=True)),
                ('img_title', models.CharField(blank=True, max_length=255, null=True)),
                ('img_alt', models.CharField(blank=True, max_length=255, null=True)),
                ('img_order', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_temp_productimages',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('shippingclass_id', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('visibility_id', models.TextField(blank=True, null=True)),
                ('supplier_id', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('variant_type', models.CharField(blank=True, max_length=255, null=True)),
                ('category1', models.CharField(blank=True, max_length=255, null=True)),
                ('category2', models.CharField(blank=True, max_length=255, null=True)),
                ('category3', models.CharField(blank=True, max_length=255, null=True)),
                ('category4', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_url', models.CharField(blank=True, max_length=256, null=True)),
                ('metatitle', models.CharField(blank=True, max_length=255, null=True)),
                ('metadescription', models.CharField(blank=True, max_length=255, null=True)),
                ('metatag', models.CharField(blank=True, max_length=255, null=True)),
                ('warehouse_name', models.CharField(blank=True, max_length=255, null=True)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('safety_stock', models.IntegerField(blank=True, null=True)),
                ('islot', models.IntegerField(blank=True, null=True)),
                ('islabel', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('new_date', models.CharField(blank=True, max_length=255, null=True)),
                ('isbn', models.TextField(blank=True, null=True)),
                ('asin', models.TextField(blank=True, null=True)),
                ('ean', models.TextField(blank=True, null=True)),
                ('npn', models.CharField(blank=True, max_length=255, null=True)),
                ('supc', models.CharField(blank=True, max_length=60, null=True)),
                ('max_order_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('video', models.CharField(blank=True, max_length=255, null=True)),
                ('mp_description', models.TextField(blank=True, null=True)),
                ('mp_features', models.TextField(blank=True, null=True)),
                ('mp_system_requirements', models.TextField(blank=True, null=True)),
                ('mp_templates', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('last_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('avg_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('isdeleted', models.IntegerField(blank=True, null=True)),
                ('isblocked', models.IntegerField(blank=True, null=True)),
                ('is_import', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_auctionable', models.IntegerField(blank=True, null=True)),
                ('image_0', models.CharField(blank=True, max_length=255, null=True)),
                ('image_1', models.CharField(blank=True, max_length=255, null=True)),
                ('image_2', models.CharField(blank=True, max_length=255, null=True)),
                ('image_3', models.CharField(blank=True, max_length=255, null=True)),
                ('image_4', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('marketplace', models.TextField(blank=True, null=True)),
                ('ebaytitle', models.TextField(blank=True, null=True)),
                ('webshoptitle', models.TextField(blank=True, null=True)),
                ('webshopvideo', models.TextField(blank=True, null=True)),
                ('webshopdecription', models.TextField(blank=True, null=True)),
                ('webshopfeatures', models.TextField(blank=True, null=True)),
                ('webshopsystemrequirements', models.TextField(blank=True, null=True)),
                ('webshoptemplates', models.TextField(blank=True, null=True)),
                ('webshopprocondotion', models.TextField(blank=True, null=True)),
                ('webshopcategoryname', models.TextField(blank=True, null=True)),
                ('webshoplisitngduration', models.TextField(blank=True, null=True)),
                ('webshopdispatchtimemax', models.TextField(blank=True, null=True)),
                ('webshopchannelid', models.TextField(blank=True, null=True)),
                ('ebayvideo', models.TextField(blank=True, null=True)),
                ('ebaydecription', models.TextField(blank=True, null=True)),
                ('ebayfeatures', models.TextField(blank=True, null=True)),
                ('ebaysystemrequirements', models.TextField(blank=True, null=True)),
                ('ebaytemplates', models.TextField(blank=True, null=True)),
                ('ebayprocondotion', models.TextField(blank=True, null=True)),
                ('ebaycategoryname', models.TextField(blank=True, null=True)),
                ('ebaylisitngduration', models.TextField(blank=True, null=True)),
                ('ebaydispatchtimemax', models.TextField(blank=True, null=True)),
                ('ebaychannelid', models.TextField(blank=True, null=True)),
                ('amazontitle', models.TextField(blank=True, null=True)),
                ('amazonvideo', models.TextField(blank=True, null=True)),
                ('amazondecription', models.TextField(blank=True, null=True)),
                ('amazonfeatures', models.TextField(blank=True, null=True)),
                ('amazonsystemrequirements', models.TextField(blank=True, null=True)),
                ('amazontemplates', models.TextField(blank=True, null=True)),
                ('amazonprocondotion', models.TextField(blank=True, null=True)),
                ('amazonategoryname', models.TextField(blank=True, null=True)),
                ('amazonlisitngduration', models.TextField(blank=True, null=True)),
                ('amazondispatchtimemax', models.TextField(blank=True, null=True)),
                ('amazonchannelid', models.TextField(blank=True, null=True)),
                ('availablequantity', models.TextField(blank=True, null=True)),
                ('defaultprice', models.TextField(blank=True, null=True)),
                ('amazonin_price', models.TextField(blank=True, null=True)),
                ('amazonuk_price', models.TextField(blank=True, null=True)),
                ('amazonus_price', models.TextField(blank=True, null=True)),
                ('ebayau_price', models.TextField(blank=True, null=True)),
                ('ebayin_price', models.TextField(blank=True, null=True)),
                ('ebayuk_price', models.TextField(blank=True, null=True)),
                ('ebayusa_price', models.TextField(blank=True, null=True)),
                ('flipkart_price', models.TextField(blank=True, null=True)),
                ('paytm_price', models.TextField(blank=True, null=True)),
                ('snapdeal_price', models.TextField(blank=True, null=True)),
                ('cost_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('avgcost', models.TextField(blank=True, null=True)),
                ('lastcost', models.TextField(blank=True, null=True)),
                ('sla', models.IntegerField(blank=True, null=True)),
                ('veg_nonveg_type', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg'), ('NA', 'NA')], default='NA', max_length=2)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('err_flag', models.IntegerField(blank=True, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
                ('price_formula_id_for_customer', models.CharField(blank=True, max_length=255, null=True)),
                ('price_formula_id_for_supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('amazonin_sku', models.TextField(blank=True, null=True)),
                ('snapdeal_sku', models.TextField(blank=True, null=True)),
                ('amazonuk_sku', models.TextField(blank=True, null=True)),
                ('amazonus_sku', models.TextField(blank=True, null=True)),
                ('ebayau_sku', models.TextField(blank=True, null=True)),
                ('ebayin_sku', models.TextField(blank=True, null=True)),
                ('ebayuk_sku', models.TextField(blank=True, null=True)),
                ('ebayusa_sku', models.TextField(blank=True, null=True)),
                ('flipkart_sku', models.TextField(blank=True, null=True)),
                ('paytm_sku', models.TextField(blank=True, null=True)),
                ('uom', models.TextField(blank=True, null=True)),
                ('product_offer_desc', models.CharField(blank=True, max_length=256, null=True)),
                ('product_offer_start_date', models.DateField(blank=True, null=True)),
                ('product_offer_end_date', models.DateField(blank=True, null=True)),
                ('hsn_id', models.TextField(blank=True, null=True)),
                ('visible_in_listing', models.CharField(blank=True, default='n', max_length=10, null=True)),
                ('related_product_skus', models.TextField(blank=True, null=True)),
                ('meta_og_tags', models.TextField(blank=True, null=True)),
                ('customer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomerGroup')),
                ('po_taxclass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temp_po_taxclass', to='webservices.EngageboostProductTaxClasses')),
                ('taxclass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temp_taxclass', to='webservices.EngageboostProductTaxClasses')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostWarehouseMasters')),
            ],
            options={
                'db_table': 'engageboost_temp_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTempSuppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('address_one', models.CharField(blank=True, max_length=255, null=True)),
                ('address_two', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_cst_number', models.CharField(blank=True, max_length=256, null=True)),
                ('cst_number', models.CharField(blank=True, max_length=256, null=True)),
                ('currency_id', models.TextField(blank=True, null=True)),
                ('exchange_rate', models.FloatField(blank=True, null=True)),
                ('lead_time', models.CharField(blank=True, max_length=255, null=True)),
                ('credit_period', models.CharField(blank=True, max_length=256, null=True)),
                ('carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('over_due', models.IntegerField(blank=True, null=True)),
                ('owner_id', models.IntegerField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('view_time', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_import', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('err_flag', models.IntegerField(blank=True, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_temp_suppliers',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTmpPurchaseOrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order_tmp_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_tmp_purchase_order_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostTmpPurchaseOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('purchase_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('supplier_id', models.IntegerField(blank=True, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('p', 'p'), ('s', 's'), ('v', 'v'), ('r', 'r')], default='p', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_tmp_purchase_orders',
            },
        ),
        migrations.AddField(
            model_name='engageboosttempproductimages',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='webservices.EngageboostTempProducts'),
        ),
    ]
