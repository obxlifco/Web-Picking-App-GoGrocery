# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-18 14:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0011_engageboostcustomemails_engageboostcustomfields_engageboostcustomforms_engageboostcustomvalues'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostCustomerActivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('activity_msg', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_details', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
            ],
            options={
                'db_table': 'engageboost_customer_activities',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerLoyaltypoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField()),
                ('rule_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.BigIntegerField(blank=True, null=True)),
                ('order_id', models.BigIntegerField(blank=True, null=True)),
                ('custom_order_id', models.CharField(blank=True, max_length=28, null=True)),
                ('customer_contact_no', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('received_points', models.IntegerField(blank=True, null=True)),
                ('burnt_points', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('received_burnt', models.CharField(blank=True, max_length=28, null=True)),
                ('status', models.CharField(blank=True, max_length=2, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_customer_loyaltypoints',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerProductReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postedon', models.DateTimeField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('reviewby', models.IntegerField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('websiteid', models.IntegerField(blank=True, null=True)),
                ('productid', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
                ('reviewbyname', models.CharField(blank=True, max_length=222, null=True)),
                ('city', models.CharField(blank=True, max_length=222, null=True)),
                ('emailid', models.CharField(blank=True, max_length=222, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_customer_product_reviews',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerReturnStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('customer_return_status', models.CharField(choices=[('Return Initiated', 'Return Initiated'), ('Return Confirmed', 'Return Confirmed')], default='n', max_length=20, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_customer_return_status',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerTaxClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('tax_class_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_type', models.IntegerField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
            ],
            options={
                'db_table': 'engageboost_customer_tax_classes',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerWiselists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_customer_wiselists',
            },
        ),
        migrations.CreateModel(
            name='EngageboostHsnCodeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, default='1', null=True)),
                ('hsn_code', models.CharField(blank=True, max_length=255, null=True)),
                ('sgst', models.IntegerField(blank=True, default='0', null=True)),
                ('cgst', models.IntegerField(blank=True, default='0', null=True)),
                ('igst', models.IntegerField(blank=True, default='0', null=True)),
                ('cess', models.IntegerField(blank=True, default='0', null=True)),
                ('ctcs', models.IntegerField(blank=True, default='0', null=True)),
                ('stcs', models.IntegerField(blank=True, default='0', null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_hsn_code_masters',
            },
        ),
        migrations.CreateModel(
            name='EngageboostProductStockCrons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stock', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_product_stock_crons',
            },
        ),
        migrations.CreateModel(
            name='EngageboostWebsiteActivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('customers_id', models.IntegerField(blank=True, null=True)),
                ('notify_msg', models.CharField(blank=True, max_length=255, null=True)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_website_activities',
            },
        ),
        migrations.CreateModel(
            name='EngageboostWebsiteChannelFieldValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engageboost_channel_id', models.IntegerField(blank=True, null=True)),
                ('engageboost_channel_field_id', models.IntegerField(blank=True, null=True)),
                ('engageboost_company_website_id', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_website_channel_field_values',
            },
        ),
        migrations.CreateModel(
            name='EngageboostWebsiteChannels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engageboost_channel_id', models.IntegerField(blank=True, null=True)),
                ('engageboost_company_website_id', models.IntegerField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_website_channels',
            },
        ),
        migrations.CreateModel(
            name='EngageboostWishlists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('website_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_wishlists',
            },
        ),
    ]
