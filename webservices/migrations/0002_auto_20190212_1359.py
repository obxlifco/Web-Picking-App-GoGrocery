# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-12 13:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostAttemptedDeliveryDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_attempted_date', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_note', models.TextField(blank=True, null=True)),
                ('new_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('attempted_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'engageboost_attempted_delivery_details',
            },
        ),
        migrations.CreateModel(
            name='EngageboostChannels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('image_small', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('is_on_product_setup', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='y', max_length=2, null=True)),
                ('country_code', models.CharField(blank=True, max_length=50, null=True)),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('website_code', models.CharField(blank=True, max_length=255, null=True)),
                ('site', models.CharField(blank=True, max_length=50, null=True)),
                ('website_name', models.CharField(blank=True, max_length=200, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('parent_logo', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('test', models.IntegerField(blank=True, null=True)),
                ('sandbox_login_link', models.CharField(blank=True, max_length=255, null=True)),
                ('sandbox_api_link', models.CharField(blank=True, max_length=255, null=True)),
                ('live_login_link', models.CharField(blank=True, max_length=255, null=True)),
                ('live_api_link', models.CharField(blank=True, max_length=255, null=True)),
                ('sandbox_app_id', models.CharField(blank=True, max_length=255, null=True)),
                ('live_app_id', models.CharField(blank=True, max_length=255, null=True)),
                ('live_cert_id', models.CharField(blank=True, max_length=255, null=True)),
                ('live_runame', models.CharField(max_length=255)),
                ('developer_id', models.CharField(max_length=255)),
                ('compatibility_level', models.IntegerField(blank=True, null=True)),
                ('sandbox_cert_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sandbox_runame', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_url', models.CharField(blank=True, max_length=255, null=True)),
                ('amazon_fulfillment_center', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'engageboost_channels',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_ids', models.TextField(blank=True, null=True)),
                ('view_type', models.IntegerField(blank=True, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, default='0', null=True)),
                ('updatedby', models.IntegerField(blank=True, default='0', null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_customer_group',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField()),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ebayusername', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=60, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('perfix', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('owner_id', models.IntegerField(blank=True, null=True)),
                ('view_time', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_import', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('ext_txt1', models.TextField(blank=True, null=True)),
                ('orders', models.IntegerField(blank=True, null=True)),
                ('avgorder', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('totalorder', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('lastlogin', models.DateField(blank=True, null=True)),
                ('is_guest_user', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=255, null=True)),
                ('vat', models.CharField(blank=True, max_length=100, null=True)),
                ('tin', models.CharField(blank=True, max_length=100, null=True)),
                ('excise_regn_no', models.CharField(blank=True, max_length=100, null=True)),
                ('cst_no', models.CharField(blank=True, max_length=100, null=True)),
                ('refferal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('device_token_ios', models.TextField(blank=True, null=True)),
                ('device_token_android', models.TextField(blank=True, null=True)),
                ('referrer_code', models.CharField(blank=True, max_length=255, null=True)),
                ('is_ledger_created', models.CharField(blank=True, max_length=20, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('auth_user', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostUsers')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCountries')),
                ('customer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomerGroup')),
            ],
            options={
                'db_table': 'engageboost_customers',
            },
        ),
        migrations.CreateModel(
            name='EngageboostCustomersAddressBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customers_id', models.IntegerField()),
                ('set_primary', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_company', models.CharField(blank=True, max_length=128, null=True)),
                ('billing_email_address', models.CharField(blank=True, max_length=128, null=True)),
                ('billing_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_landmark', models.CharField(blank=True, max_length=256, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_country', models.IntegerField(blank=True, null=True)),
                ('billing_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_name', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_company', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_landmark', models.CharField(blank=True, max_length=256, null=True)),
                ('delivery_city', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_state', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_country', models.IntegerField(blank=True, null=True)),
                ('delivery_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('lat_val', models.CharField(blank=True, max_length=100, null=True)),
                ('long_val', models.CharField(blank=True, max_length=100, null=True)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_customers_address_book',
            },
        ),
        migrations.CreateModel(
            name='EngageboostFlipkartOrderProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('api_for', models.CharField(blank=True, max_length=100, null=True)),
                ('reponse_type', models.CharField(blank=True, max_length=100, null=True)),
                ('error_code', models.CharField(blank=True, max_length=100, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('custom_error_message', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_flipkart_order_process',
            },
        ),
        migrations.CreateModel(
            name='EngageboostOrdermaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('company_id', models.BigIntegerField(blank=True, null=True)),
                ('custom_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_orderlineitem_id', models.TextField(blank=True, null=True)),
                ('payment_method_id', models.IntegerField(blank=True, null=True)),
                ('payment_type_id', models.IntegerField(blank=True, null=True)),
                ('payment_method_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_method_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_company', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_state', models.IntegerField(blank=True, null=True)),
                ('billing_state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_country', models.IntegerField(blank=True, null=True)),
                ('billing_country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address_book_id', models.IntegerField(blank=True, null=True)),
                ('delivery_company', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_city', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_state', models.IntegerField(blank=True, null=True)),
                ('delivery_state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_sap_ecustomer_state_no', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_country', models.IntegerField(blank=True, null=True)),
                ('delivery_country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('custom_msg', models.TextField(blank=True, null=True)),
                ('applied_coupon', models.CharField(blank=True, max_length=15, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('shipping_cost', models.FloatField(blank=True, null=True)),
                ('shipping_cost_excl_tax', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('gross_discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('excise_duty', models.FloatField(blank=True, null=True)),
                ('security_amount', models.FloatField(blank=True, null=True)),
                ('gross_amount_base', models.FloatField(blank=True, null=True)),
                ('net_amount_base', models.FloatField(blank=True, null=True)),
                ('shipping_cost_base', models.FloatField(blank=True, null=True)),
                ('paid_amount_base', models.FloatField(blank=True, null=True)),
                ('gross_discount_amount_base', models.FloatField(blank=True, null=True)),
                ('order_status', models.IntegerField(blank=True, null=True)),
                ('buy_status', models.IntegerField(blank=True, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=50, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('is_mail', models.IntegerField(blank=True, null=True)),
                ('tracking_company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_no', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_url', models.CharField(blank=True, max_length=255, null=True)),
                ('campaign_id', models.IntegerField(blank=True, null=True)),
                ('cart_discount', models.FloatField(blank=True, null=True)),
                ('tracking_mail_send', models.IntegerField(blank=True, null=True)),
                ('response_msg', models.TextField(blank=True, null=True)),
                ('channel_shipping_status', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='No', max_length=255)),
                ('fulfillment_id', models.IntegerField(blank=True, null=True)),
                ('cod_charge', models.FloatField(blank=True, null=True)),
                ('send_notes', models.TextField(blank=True, null=True)),
                ('received_amount', models.FloatField(blank=True, null=True)),
                ('received_status', models.CharField(choices=[('Payment Ok', 'Payment Ok'), ('Excess Of', 'Excess Of'), ('Deficit Of', 'Deficit Of')], default='Payment Ok', max_length=255)),
                ('mobiquest_point_discount', models.CharField(blank=True, max_length=255, null=True)),
                ('mobiquest_passcode', models.CharField(blank=True, max_length=255, null=True)),
                ('assign_to', models.IntegerField(blank=True, null=True)),
                ('assign_wh', models.IntegerField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=256, null=True)),
                ('pay_txntranid', models.CharField(blank=True, max_length=256, null=True)),
                ('assigned_show_room', models.IntegerField(blank=True, null=True)),
                ('return_note', models.TextField(blank=True, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('dispatch_date', models.DateField(blank=True, null=True)),
                ('shipment_id', models.IntegerField(blank=True, null=True)),
                ('zone_id', models.IntegerField(blank=True, null=True)),
                ('time_slot_date', models.DateField(blank=True, null=True)),
                ('time_slot_id', models.CharField(blank=True, max_length=256, null=True)),
                ('slot_start_time', models.CharField(blank=True, max_length=20, null=True)),
                ('slot_end_time', models.CharField(blank=True, max_length=20, null=True)),
                ('return_status', models.CharField(choices=[('Pending', 'Pending'), ('Authorized', 'Authorized'), ('Processing', 'Processing'), ('Declined', 'Declined')], max_length=255, null=True)),
                ('sort_by_distance', models.IntegerField(blank=True, null=True)),
                ('signature_image', models.TextField(blank=True, null=True)),
                ('flag_order', models.IntegerField(blank=True, null=True)),
                ('area_id', models.IntegerField(blank=True, null=True)),
                ('trent_picklist_id', models.IntegerField(blank=True, null=True)),
                ('refferal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('tally_sales_entered', models.CharField(blank=True, max_length=50, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomers')),
                ('webshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostChannels')),
            ],
            options={
                'db_table': 'engageboost_ordermaster',
            },
        ),
        migrations.CreateModel(
            name='EngageboostOrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('deleted_quantity', models.IntegerField(blank=True, null=True)),
                ('product_price', models.FloatField(blank=True, null=True)),
                ('product_discount_price', models.FloatField(blank=True, null=True)),
                ('product_discount_name', models.CharField(blank=True, max_length=256, null=True)),
                ('product_disc_type', models.SmallIntegerField(blank=True, null=True)),
                ('product_discount_rate', models.FloatField(blank=True, null=True)),
                ('product_excise_duty', models.FloatField(blank=True, null=True)),
                ('excise_duty_per', models.CharField(blank=True, max_length=256, null=True)),
                ('product_tax_price', models.FloatField(blank=True, null=True)),
                ('tax_percentage', models.FloatField(blank=True, null=True)),
                ('tax_name', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('product_price_base', models.FloatField(blank=True, null=True)),
                ('product_discount_price_base', models.FloatField(blank=True, null=True)),
                ('shipping_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_price_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_tax_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('giftwrap_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('giftwrap_price_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('giftwrap_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('giftwrap_tax_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_discount_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('assign_to', models.IntegerField(blank=True, null=True)),
                ('assign_wh', models.IntegerField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=100, null=True)),
                ('shortage', models.IntegerField(blank=True, null=True)),
                ('returns', models.IntegerField(blank=True, null=True)),
                ('grn_quantity', models.IntegerField(blank=True, null=True)),
                ('trents_picklist_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('sgst', models.FloatField(blank=True, null=True)),
                ('cgst', models.FloatField(blank=True, null=True)),
                ('igst', models.FloatField(blank=True, null=True)),
                ('cess', models.FloatField(blank=True, null=True)),
                ('sgst_percentage', models.FloatField(blank=True, null=True)),
                ('cgst_percentage', models.FloatField(blank=True, null=True)),
                ('igst_percentage', models.FloatField(blank=True, null=True)),
                ('cess_percentage', models.FloatField(blank=True, null=True)),
                ('hsn_id', models.CharField(blank=True, max_length=150, null=True)),
                ('shipping_igst', models.FloatField(blank=True, null=True)),
                ('shipping_sgst', models.FloatField(blank=True, null=True)),
                ('shipping_cgst', models.FloatField(blank=True, null=True)),
                ('shipping_cgst_percentage', models.FloatField(blank=True, null=True)),
                ('shipping_sgst_percentage', models.FloatField(blank=True, null=True)),
                ('shipping_igst_percentage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engageboost_order_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, default=0, null=True)),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('ebay_item_id', models.CharField(blank=True, max_length=255, null=True)),
                ('amazon_itemid', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_addstatus', models.TextField(blank=True, null=True)),
                ('twitter_addstatus', models.TextField(blank=True, null=True)),
                ('amazon_addstatus', models.TextField(blank=True, null=True)),
                ('ebay_listing_starttime', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_listing_endtime', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_listing_build', models.TextField(blank=True, null=True)),
                ('ebay_listing_version', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_listing_time', models.CharField(blank=True, max_length=255, null=True)),
                ('total_listingfee', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.TextField(blank=True, null=True)),
                ('meta_url', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_key_word', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('shippingclass_id', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('visibility_id', models.IntegerField(blank=True, null=True)),
                ('supplier_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('new_date', models.CharField(blank=True, max_length=255, null=True)),
                ('isbn', models.TextField(blank=True, null=True)),
                ('asin', models.TextField(blank=True, null=True)),
                ('ean', models.TextField(blank=True, null=True)),
                ('npn', models.CharField(blank=True, max_length=255, null=True)),
                ('supc', models.CharField(blank=True, max_length=60, null=True)),
                ('max_order_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('video', models.CharField(blank=True, max_length=255, null=True)),
                ('mp_description', models.TextField(blank=True, null=True)),
                ('mp_features', models.TextField(blank=True, null=True)),
                ('mp_system_requirements', models.TextField(blank=True, null=True)),
                ('mp_templates', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('last_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('avg_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('default_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('pdf_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_import', models.TextField(blank=True, null=True)),
                ('is_auctionable', models.IntegerField(blank=True, null=True)),
                ('numberof_sale', models.IntegerField(blank=True, default=0, null=True)),
                ('numberof_view', models.IntegerField(blank=True, default=0, null=True)),
                ('ebay', models.IntegerField(blank=True, default=0, null=True)),
                ('amazon', models.IntegerField(blank=True, default=0, null=True)),
                ('webshop', models.IntegerField(blank=True, default=0, null=True)),
                ('order_price', models.IntegerField(blank=True, default=0, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('best_selling', models.IntegerField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('org_pro_con', models.CharField(blank=True, max_length=50, null=True)),
                ('is_facebook_product', models.TextField(blank=True, null=True)),
                ('sla', models.IntegerField(blank=True, null=True)),
                ('veg_nonveg_type', models.TextField(blank=True, null=True)),
                ('price_formula_id_for_customer', models.IntegerField(blank=True, null=True)),
                ('price_formula_id_for_supplier', models.IntegerField(blank=True, null=True)),
                ('uom', models.CharField(blank=True, max_length=255, null=True)),
                ('product_offer_desc', models.CharField(blank=True, max_length=256, null=True)),
                ('product_offer_start_date', models.DateField(blank=True, null=True)),
                ('product_offer_end_date', models.DateField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('hsn_id', models.TextField(blank=True, null=True)),
                ('visible_in_listing', models.CharField(blank=True, default='n', max_length=10, null=True)),
                ('related_product_skus', models.TextField(blank=True, null=True)),
                ('meta_og_tags', models.TextField(blank=True, null=True)),
                ('customer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomerGroup')),
            ],
            options={
                'db_table': 'engageboost_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostProductTaxClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, default='0', null=True)),
                ('updatedby', models.IntegerField(blank=True, default='0', null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_product_tax_classes',
            },
        ),
        migrations.CreateModel(
            name='EngageboostRepricingMaximumMinRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('rule_for', models.CharField(blank=True, max_length=250, null=True)),
                ('based_on', models.CharField(blank=True, max_length=250, null=True)),
                ('changed_by_or_to', models.CharField(blank=True, max_length=250, null=True)),
                ('changed_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_repricing_maximum_min_rules',
            },
        ),
        migrations.CreateModel(
            name='EngageboostShipmentOrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('shortage', models.IntegerField(blank=True, null=True)),
                ('returns', models.IntegerField(blank=True, null=True)),
                ('grn_quantity', models.IntegerField(blank=True, null=True)),
                ('grn_return', models.IntegerField(blank=True, null=True)),
                ('shipment_status', models.CharField(blank=True, default='Created', max_length=100, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostOrdermaster')),
                ('order_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostOrderProducts')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts')),
            ],
            options={
                'db_table': 'engageboost_shipment_order_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostShipmentOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('webshop_id', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('shipping_method_id', models.SmallIntegerField(blank=True, null=True)),
                ('tracking_no', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('routing_code', models.CharField(blank=True, max_length=50, null=True)),
                ('ccrcrdref', models.CharField(blank=True, max_length=50, null=True)),
                ('destinationarea', models.CharField(blank=True, max_length=10, null=True)),
                ('destinationlocation', models.CharField(blank=True, max_length=10, null=True)),
                ('actualweight', models.CharField(blank=True, max_length=100, null=True)),
                ('total_quantity', models.IntegerField(blank=True, null=True)),
                ('dimension', models.CharField(blank=True, max_length=100, null=True)),
                ('schedule_pickup_date', models.DateField(blank=True, null=True)),
                ('schedule_pickup_time', models.TimeField(blank=True, null=True)),
                ('label_pdf_name', models.CharField(blank=True, max_length=256, null=True)),
                ('zone_id', models.IntegerField(blank=True, null=True)),
                ('time_slot_id', models.CharField(blank=True, max_length=256, null=True)),
                ('no_of_crates', models.SmallIntegerField(blank=True, null=True)),
                ('shipment_status', models.CharField(blank=True, choices=[('created', 'created'), ('packed', 'packed'), ('ready to ship', 'ready to ship'), ('ready to dispatch', 'ready to dispatch'), ('dispatched', 'dispatched'), ('shipped', 'shipped'), ('completed', 'completed')], default='Created', max_length=100, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostOrdermaster')),
            ],
            options={
                'db_table': 'engageboost_shipment_orders',
            },
        ),
        migrations.CreateModel(
            name='EngageboostShipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_shipment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('picklist_id', models.IntegerField(blank=True, null=True)),
                ('shipping_method_id', models.SmallIntegerField(blank=True, null=True)),
                ('no_of_vehicles', models.IntegerField(blank=True, null=True)),
                ('shipment_status', models.CharField(blank=True, choices=[('created', 'created'), ('packed', 'packed'), ('ready to ship', 'ready to ship'), ('ready to dispatch', 'ready to dispatch'), ('dispatched', 'dispatched'), ('shipped', 'shipped'), ('completed', 'completed')], default='created', max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
            ],
            options={
                'db_table': 'engageboost_shipments',
            },
        ),
        migrations.CreateModel(
            name='EngageboostWarehouseMasters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('state_id', models.IntegerField(blank=True, null=True)),
                ('state_name', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('isblocked', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('isdeleted', models.CharField(blank=True, choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2, null=True)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('order_id_format', models.CharField(blank=True, max_length=256, null=True)),
                ('shipping_id_format', models.CharField(blank=True, max_length=256, null=True)),
                ('invoice_id_format', models.CharField(blank=True, max_length=256, null=True)),
                ('text_color', models.CharField(blank=True, max_length=100, null=True)),
                ('product_stock_code', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(blank=True, null=True)),
                ('createdby', models.IntegerField(blank=True, default='0', null=True)),
                ('updatedby', models.IntegerField(blank=True, default='0', null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'engageboost_warehouse_masters',
            },
        ),
        migrations.AddField(
            model_name='engageboostshipmentorders',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostShipments'),
        ),
        migrations.AddField(
            model_name='engageboostshipmentorderproducts',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostShipments'),
        ),
        migrations.AddField(
            model_name='engageboostshipmentorderproducts',
            name='shipment_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipment_order_products', to='webservices.EngageboostShipmentOrders'),
        ),
        migrations.AddField(
            model_name='engageboostproducts',
            name='max_price_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='max_price_rule', to='webservices.EngageboostRepricingMaximumMinRules'),
        ),
        migrations.AddField(
            model_name='engageboostproducts',
            name='min_price_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='min_price_rule', to='webservices.EngageboostRepricingMaximumMinRules'),
        ),
        migrations.AddField(
            model_name='engageboostproducts',
            name='po_taxclass',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_taxclass', to='webservices.EngageboostProductTaxClasses'),
        ),
        migrations.AddField(
            model_name='engageboostproducts',
            name='taxclass',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taxclass', to='webservices.EngageboostProductTaxClasses'),
        ),
        migrations.AddField(
            model_name='engageboostproducts',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostWarehouseMasters'),
        ),
        migrations.AddField(
            model_name='engageboostflipkartorderprocess',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostOrdermaster'),
        ),
        migrations.AddField(
            model_name='engageboostattempteddeliverydetails',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostOrdermaster'),
        ),
        migrations.AddField(
            model_name='engageboostattempteddeliverydetails',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostShipments'),
        ),
    ]
