# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-19 15:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0020_engageboosttemplatecategories_engageboosttemplatecategorymasters_engageboosttemplatecolormasters_eng'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostTempOrdermaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_id', models.IntegerField(blank=True, null=True)),
                ('channel_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_item_id', models.CharField(blank=True, max_length=21, null=True)),
                ('channel_orderlineitem_id', models.TextField(blank=True, null=True)),
                ('payment_method_id', models.IntegerField(blank=True, null=True)),
                ('payment_type_id', models.IntegerField(blank=True, null=True)),
                ('payment_method_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_method_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_company', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_country', models.IntegerField(blank=True, null=True)),
                ('billing_country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address_book_id', models.IntegerField(blank=True, null=True)),
                ('delivery_company', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_city', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_state', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_sap_ecustomer_state_no', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_country', models.IntegerField(blank=True, null=True)),
                ('delivery_country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('custom_msg', models.TextField(blank=True, null=True)),
                ('applied_coupon', models.CharField(blank=True, max_length=15, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('shipping_cost', models.FloatField(blank=True, null=True)),
                ('shipping_cost_excl_tax', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('gross_discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('excise_duty', models.FloatField(blank=True, null=True)),
                ('security_amount', models.FloatField(blank=True, null=True)),
                ('gross_amount_base', models.FloatField(blank=True, null=True)),
                ('net_amount_base', models.FloatField(blank=True, null=True)),
                ('shipping_cost_base', models.FloatField(blank=True, null=True)),
                ('paid_amount_base', models.FloatField(blank=True, null=True)),
                ('gross_discount_amount_base', models.FloatField(blank=True, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.TimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('tracking_company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_no', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_url', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_discount', models.FloatField(blank=True, null=True)),
                ('channel_shipping_status', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('cod_charge', models.FloatField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('expected_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('dispatch_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('success', 'success'), ('error', 'error')], default='success', max_length=2)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('err_flag', models.IntegerField(blank=True, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('buyer_date', models.DateTimeField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('item_name', models.CharField(blank=True, max_length=500, null=True)),
                ('item_price', models.FloatField(blank=True, null=True)),
                ('shipping_tax', models.FloatField(blank=True, null=True)),
                ('shipment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_street_address3', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_end_date', models.DateTimeField(blank=True, null=True)),
                ('item_promotion_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ship_promotion_discount', models.CharField(blank=True, max_length=255, null=True)),
                ('ship_promotion_id', models.CharField(blank=True, max_length=100, null=True)),
                ('createdby', models.IntegerField(blank=True, null=True)),
                ('updatedby', models.IntegerField(blank=True, null=True)),
                ('isblocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('isdeleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostCustomers')),
                ('webshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostChannels')),
            ],
            options={
                'db_table': 'engageboost_temp_ordermaster',
            },
        ),
    ]
