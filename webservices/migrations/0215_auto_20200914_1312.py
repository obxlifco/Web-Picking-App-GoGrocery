# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-09-14 13:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webservices', '0214_engageboostccavenueupgradedreturndetails_payment_response_full'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngageboostAllUserDeviceToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, default='0', null=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('device_token', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enageboost_alluser_devicetoken',
            },
        ),
        migrations.CreateModel(
            name='EngageboostOrderSubstituteProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('deleted_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('shortage', models.IntegerField(blank=True, default='0', null=True)),
                ('returns', models.IntegerField(blank=True, default='0', null=True)),
                ('grn_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('product_price', models.FloatField(blank=True, default='0', null=True)),
                ('product_discount_price', models.FloatField(blank=True, default='0', null=True)),
                ('product_discount_name', models.CharField(blank=True, max_length=256, null=True)),
                ('product_disc_type', models.SmallIntegerField(blank=True, null=True)),
                ('product_discount_rate', models.FloatField(blank=True, default='0', null=True)),
                ('product_excise_duty', models.FloatField(blank=True, default='0', null=True)),
                ('product_tax_price', models.FloatField(blank=True, default='0', null=True)),
                ('tax_percentage', models.FloatField(blank=True, default='0', null=True)),
                ('shipping_price', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=10, null=True)),
                ('shipping_tax', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=10, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('substitute_product_id', models.IntegerField(blank=True, default=0, null=True)),
                ('weight', models.FloatField(blank=True, default='0', null=True)),
                ('is_substitute', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('substitute_notes', models.TextField(blank=True, null=True)),
                ('pick_as_substitute', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('send_approval', models.CharField(blank=True, choices=[('pending', 'pending'), ('approve', 'approve'), ('declined', 'declined')], max_length=10, null=True)),
                ('send_approval_interval', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'engageboost_order_substitute_products',
            },
        ),
        migrations.CreateModel(
            name='EngageboostScannedOrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('product_old_price', models.FloatField(blank=True, default='0', null=True)),
                ('product_new_price', models.FloatField(blank=True, default='0', null=True)),
                ('weight', models.FloatField(blank=True, default='0', null=True)),
                ('product_discount_price', models.FloatField(blank=True, default='0', null=True)),
                ('product_tax_price', models.FloatField(blank=True, default='0', null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('is_blocked', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
                ('pick_as_substitute', models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2)),
            ],
            options={
                'db_table': 'engageboost_scanned_order_products',
            },
        ),
        migrations.AddField(
            model_name='engageboostappversioncontrol',
            name='picking_android',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='engageboostemailtypecontents',
            name='notification_body',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='engageboostemailtypecontents',
            name='notification_body_store',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='engageboostemailtypecontents',
            name='notification_title',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='engageboostemailtypecontents',
            name='notification_title_store',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='engageboostordermaster',
            name='picker_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='engageboostorderproducts',
            name='is_substitute',
            field=models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2),
        ),
        migrations.AddField(
            model_name='engageboostorderproducts',
            name='pick_as_substitute',
            field=models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2),
        ),
        migrations.AddField(
            model_name='engageboostorderproducts',
            name='send_approval',
            field=models.CharField(blank=True, choices=[('pending', 'pending'), ('approve', 'approve'), ('declined', 'declined')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='engageboostorderproducts',
            name='substitute_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='engageboostshipmentorderproducts',
            name='pick_as_substitute',
            field=models.CharField(choices=[('y', 'y'), ('n', 'n')], default='n', max_length=2),
        ),
        migrations.AddField(
            model_name='engageboostscannedorderproducts',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scanned_order', to='webservices.EngageboostOrdermaster'),
        ),
        migrations.AddField(
            model_name='engageboostscannedorderproducts',
            name='order_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scanned_order_products', to='webservices.EngageboostOrderProducts'),
        ),
        migrations.AddField(
            model_name='engageboostscannedorderproducts',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scanned_products', to='webservices.EngageboostProducts'),
        ),
        migrations.AddField(
            model_name='engageboostordersubstituteproducts',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_substitute_products', to='webservices.EngageboostOrdermaster'),
        ),
        migrations.AddField(
            model_name='engageboostordersubstituteproducts',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webservices.EngageboostProducts'),
        ),
    ]
